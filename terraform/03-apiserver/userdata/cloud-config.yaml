#cloud-config
 
# import kubernetes repository key
bootcmd:
  - apt-get update
  - apt-get install -y apt-transport-https curl
  - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

# Kubernetes repository
apt:
  sources:
    kube:
      source: "deb https://apt.kubernetes.io/ kubernetes-xenial main"

# apt-get update
apt_update: true

# Packages
packages:
  - docker.io
  - python3-pip
  - kubectl=1.14.3-00
  - kubeadm=1.14.3-00
  - kubelet=1.14.3-00

# Files to services
write_files:
  - content: |
      [Unit]
      Description=Format
      
      [Service]
      Type=oneshot
      ExecStart=/bin/mkdir -p /etc/kubernetes/pki/etcd
      ExecStart=/bin/rm -f /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      ExecStart=/root/.local/bin/aws s3 cp s3://data-kubernetes/ca/ca.crt /etc/kubernetes/pki/
      ExecStart=/root/.local/bin/aws s3 cp s3://data-kubernetes/ca/ca.key /etc/kubernetes/pki/
      ExecStart=/bin/cp -f /etc/kubernetes/pki/ca.crt /etc/kubernetes/pki/etcd/
      ExecStart=/bin/cp -f /etc/kubernetes/pki/ca.key /etc/kubernetes/pki/etcd/
      ExecStart=/root/.local/bin/aws s3 cp s3://data-kubernetes/apiserver/apiserver-etcd-client.crt /etc/kubernetes/pki/
      ExecStart=/root/.local/bin/aws s3 cp s3://data-kubernetes/apiserver/apiserver-etcd-client.key /etc/kubernetes/pki/
      ExecStart=/root/.local/bin/aws s3 cp s3://data-kubernetes/apiserver/kubeadmcfg.yaml /etc/kubernetes/kubeadmcfg.yaml-template
      ExecStart=/root/.local/bin/aws s3 cp s3://data-kubernetes/apiserver/11-kubelet.conf /etc/systemd/system/kubelet.service.d/
    owner: root:root
    path: /etc/systemd/system/get-kube-conf.service
    permissions: '0644'
  - content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
    owner: root:root
    path: /etc/docker/daemon.json
    permissions: '0644'
  - content: |
      [Unit]
      Description=Install Cluster
      Requires=get-kube-conf.service

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/kubeadm init --config=/etc/kubernetes/kubeadmcfg.yaml --experimental-upload-certs  

    owner: root:root
    path: /etc/systemd/system/k8s-cluster-conf.service
    permissions: '0644'
  - content: |
      #!/bin/bash
      # Instal AWS Cli 
      pip3 install awscli --user

      # Call get-kube-conf.service
      systemctl start get-kube-conf.service

      # Weave requires
      sysctl net.bridge.bridge-nf-call-iptables=1
      echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.conf
      sysctl -p

      # Configure FQDN
      EC2=$(curl -s http://169.254.169.254/latest/meta-data/local-hostname)
      sed s/HOSTNAME/${EC2}/g /etc/kubernetes/kubeadmcfg.yaml-template > /etc/kubernetes/kubeadmcfg.yaml

      # Call k8s-cluster-conf.service
      systemctl start k8s-cluster-conf.service

      # Enable kubelet and start
      systemctl daemon-reload
      systemctl enable docker
      systemctl enable kubelet
      systemctl start docker
      systemctl start kubelet
    owner: root:root
    path: /var/lib/cloud/scripts/per-instance/01-execute-conf.sh
    permissions: '0755'